<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_cancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btn_aceptar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>