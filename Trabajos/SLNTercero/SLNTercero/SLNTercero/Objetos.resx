<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pcb_imagen.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAB9AKYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCp4V8IeH77wxp11c6TbyzSwhndt2SfzrX/AOEF8Mf9AS1/8e/x
        qTwT/wAiZpH/AF7LW9UN6l2OcPgbwx/0BLX/AMe/xoPgbwxn/kCWv/j3+NdF/EKD1pXEc23gjwuilm0a
        1CrySd3HGfWuj8N/DDwpNo0VzfeH7V5rnMwU7/kU8qo+bpjFVdRRpbMwIQGnZIR9WbH9TXp0CLDCqL90
        AAfSrhrqyWcn/wAKs8ED/mW7L/x//wCKo/4Vb4H/AOhbsv8Ax/8A+KrotYv20zS5rtQpKbcBuASWA7fW
        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
</value>
  </data>
</root>